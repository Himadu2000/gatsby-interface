{"version":3,"file":"main.7a4b5423ed80594a3d68.bundle.js","sources":["webpack:///./src/components/Button/Button.Skeleton.js"],"sourcesContent":["import React, { Fragment } from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"react-emotion\"\nimport { MdRefresh } from \"react-icons/md\"\nimport { Link } from \"gatsby\"\n\nexport const SkeletonStyledComponent = styled(`button`)``\n\nexport const buttonPropTypes = {\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  loadingLabel: PropTypes.string,\n  href: PropTypes.string,\n  size: PropTypes.string,\n  to: PropTypes.string,\n}\n\nconst buttonSkeletonPropTypes = {\n  ...buttonPropTypes,\n  StyledComponent: PropTypes.any,\n}\n\nexport const buttonDefaultPropTypes = {\n  disabled: false,\n  loading: false,\n  loadingLabel: `Loading`,\n  size: `L`,\n}\n\nexport const buttonSkeletonDefaultPropTypes = {\n  ...buttonDefaultPropTypes,\n  StyledComponent: SkeletonStyledComponent,\n}\n\nconst ButtonSkeleton = ({\n  StyledComponent,\n  children,\n  disabled,\n  href,\n  loading,\n  loadingLabel,\n  to,\n  ...rest\n}) => {\n  if (href) {\n    const ComponentAsExternalLink = StyledComponent.withComponent(`a`)\n    return (\n      <ComponentAsExternalLink href={href} {...rest}>\n        {children}\n      </ComponentAsExternalLink>\n    )\n  }\n\n  if (to) {\n    const ComponentAsInternalLink = StyledComponent.withComponent(Link)\n    return (\n      <ComponentAsInternalLink to={to} {...rest}>\n        {children}\n      </ComponentAsInternalLink>\n    )\n  }\n\n  return (\n    <StyledComponent disabled={disabled} loading={loading} {...rest}>\n      {loading ? (\n        <Fragment>\n          {loadingLabel} <MdRefresh />\n        </Fragment>\n      ) : (\n        children\n      )}\n    </StyledComponent>\n  )\n}\n\nButtonSkeleton.propTypes = buttonSkeletonPropTypes\nButtonSkeleton.defaultProps = buttonSkeletonDefaultPropTypes\n\nexport default ButtonSkeleton\n"],"mappings":"AAMA","sourceRoot":""}